<?php
/**
 * Plugin Name: Meu Endereço Personalizado
 * Plugin URI: https://seudominio.com/meu-endereco-personalizado
 * Description: Plugin para WooCommerce que preenche automaticamente o endereço com base no CEP e permite gerenciar até 3 endereços personalizados (residencial, comercial, presente).
 * Version: 1.0.0
 * Author: Seu Nome
 * Author URI: https://seudominio.com
 * License: GPL2
 * Text Domain: meu-endereco-personalizado
 * Domain Path: /languages
 */

if (!defined('ABSPATH')) {
    exit; // Impede acesso direto
}

// Inclui arquivos principais
require_once plugin_dir_path(__FILE__) . 'includes/class-mep-helper.php';
require_once plugin_dir_path(__FILE__) . 'includes/class-mep-endereco-manager.php';

// Hooks para carregar scripts e lógica
add_action('wp_enqueue_scripts', 'mep_enqueue_scripts');
function mep_enqueue_scripts() {
    if (is_cart() || is_checkout()) {
        wp_enqueue_script(
            'mep-autofill-endereco',
            plugin_dir_url(__FILE__) . 'assets/js/autofill-endereco.js',
            ['jquery'],
            '1.0',
            true
        );

        wp_localize_script('mep-autofill-endereco', 'mep_vars', [
            'ajax_url' => admin_url('admin-ajax.php'),
            'nonce' => wp_create_nonce('mep_nonce')
        ]);
    }
}

// Handler AJAX para salvar o endereço
add_action('wp_ajax_mep_salvar_endereco_sessao', 'mep_salvar_endereco_sessao');
add_action('wp_ajax_nopriv_mep_salvar_endereco_sessao', 'mep_salvar_endereco_sessao');
function mep_salvar_endereco_sessao() {
    check_ajax_referer('mep_nonce', 'nonce');

    $endereco = $_POST['endereco'];

    if (!empty($endereco)) {
        //WC()->session->set('mep_endereco', $endereco);
        WC()->session->set('mep_bairro_foradoalcance', null);



        // Valida bairro
        if (!MEP_Helper::bairro_esta_na_lista($endereco['bairro'])) {
            WC()->session->set('mep_bairro_foradoalcance', true);
        } else {
            WC()->session->__unset('mep_bairro_foradoalcance');
        }
    }

    wp_send_json_success();
}

// Preenche o checkout com os dados salvos
add_filter('woocommerce_checkout_fields', 'mep_autopreencher_checkout');
function mep_autopreencher_checkout($fields) {
    $endereco = WC()->session->get('mep_endereco');

    if ($endereco) {
        $fields['billing']['billing_address_1']['default'] = $endereco['logradouro'] ?? '';
        $fields['billing']['billing_city']['default'] = $endereco['localidade'] ?? '';
        $fields['billing']['billing_state']['default'] = $endereco['uf'] ?? '';

        if (isset($fields['billing']['billing_neighborhood'])) {
            $fields['billing']['billing_neighborhood']['default'] = $endereco['bairro'] ?? '';
        }
    }

    return $fields;
}

// Adiciona o campo Bairro
add_filter('woocommerce_checkout_fields', 'mep_adicionar_campo_bairro');
function mep_adicionar_campo_bairro($fields) {
    $fields['billing']['billing_neighborhood'] = [
        'label'     => __('Bairro', 'meu-endereco-personalizado'),
        'required'  => true,
        'class'     => ['form-row-wide'],
        'priority'  => 45,
    ];
    return $fields;
}

// Salva o bairro no pedido
add_action('woocommerce_checkout_update_order_meta', 'mep_salvar_bairro_no_pedido');
function mep_salvar_bairro_no_pedido($order_id) {
    if (!empty($_POST['billing_neighborhood'])) {
        update_post_meta($order_id, '_billing_neighborhood', sanitize_text_field($_POST['billing_neighborhood']));
    }
}

// Exibe o bairro no admin
add_filter('woocommerce_order_formatted_billing_address', 'mep_exibir_bairro_endereco', 10, 2);
function mep_exibir_bairro_endereco($address, $order) {
    if ($bairro = get_post_meta($order->get_id(), '_billing_neighborhood', true)) {
        $address['neighborhood'] = $bairro;
    }
    return $address;
}

// Exibe aviso caso bairro esteja fora da lista
add_action('woocommerce_before_checkout_form', function() {
    if (WC()->session->get('mep_bairro_foradoalcance')) {
        wc_print_notice('Infelizmente ainda não entregamos no seu bairro.', 'error');
    }
});

// Adiciona item no menu do admin
add_action('admin_menu', 'mep_adicionar_menu_admin');

function mep_adicionar_menu_admin() {
    add_menu_page(
        'Endereço Personalizado',      // Título da página
        'Endereço Personalizado',      // Título do menu
        'manage_options',              // Permissão
        'mep-config',                  // Slug da página
        'mep_render_pagina_config',    // Função de callback
        'dashicons-location',          // Ícone
        56                             // Posição no menu
    );
}

// Callback que carrega o conteúdo da página
function mep_render_pagina_config() {
    include plugin_dir_path(__FILE__) . 'admin/settings-page.php';
}
